service: nameless

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs8.10
  region: eu-central-1
  stage: local
  environment:
    balanceTableName: ${self:custom.balanceTableName}
  iamRoleStatements:
      - Effect: "Allow"
        Action:
        - "s3:ListBucket"
        Resource:
          Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - Ref: ServerlessDeploymentBucket
      - Effect: "Allow"
        Action:
        - "s3:PutObject"
        Resource:
          Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - Ref: "ServerlessDeploymentBucket"
            - "/*"
      - Effect: Allow
        Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        Resource: "arn:aws:dynamodb:*:*:table/${self:custom.balanceTableName}"



custom:
  stage: ${opt:stage, self:provider.stage}
  balanceTableName: "nameless.${self:custom.stage}.balance"

functions:
  createDb:
    handler: transactions/TransactionsController.create
    events:
    - http:
        path: transactions
        method: post
        cors: true
  create:
    handler: todos/create.create
    events:
    - http:
        path: todo
        method: post
        cors: true

resources:
  Resources:
    BalanceTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: spaceName
          AttributeType: S
        KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: spaceName
          KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
        TableName: ${self:custom.balanceTableName}
